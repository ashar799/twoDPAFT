(pc$sd^2[1] + pc$sd^2[2])/ sum(pc$sd^2)
(pc$sd[1]^2 + pc$sd[2]^2)/ sum((pc$sd)^2)
pc <- prcomp(Y2)
pc.pred <- predict(pc,newdata = Y2)
(pc$sd[1]^2 + pc$sd[2]^2)/ sum((pc$sd)^2)
pc <- prcomp(Y1)
pc.pred <- predict(pc,newdata = Y1)
p1 <- ggplot(as.data.frame(pc.pred), aes(x=pc.pred[,1], y= pc.pred[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
pc <- prcomp(Y2)
pc.pred <- predict(pc,newdata = Y2)
p2 <- ggplot(as.data.frame(pc.pred), aes(x=pc.pred[,1], y= pc.pred[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM miRNA Expression \n DPMM Clustering \n 55% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
p1
p2
surv.fit <- survfit(surv.ob.new ~ c.final)
logrank <- survdiff(surv.ob.new ~ c.final)
surv.ob <- Surv(exp(time),censoring)
surv.fit <- survfit(surv.ob.new ~ c.final)
logrank <- survdiff(surv.ob.new ~ c.final)
c.final
length(c.final)
length(time)
surv.ob <- Surv(exp(time),censoring)
surv.fit <- survfit(surv.ob.new ~ c.final)
c.final
length(c.final)
N
surv.ob <- Surv(exp(time),censoring)
surv.fit <- survfit(surv.ob ~ c.final)
logrank <- survdiff(surv.ob ~ c.final)
logrank
pc <- prcomp(Y1)
pc.pred <- predict(pc,newdata = Y1)
p1 <- ggplot(as.data.frame(pc.pred), aes(x=pc.pred[,1], y= pc.pred[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
pc <- prcomp(Y2)
pc.pred <- predict(pc,newdata = Y2)
p2 <- ggplot(as.data.frame(pc.pred), aes(x=pc.pred[,1], y= pc.pred[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM miRNA Expression \n DPMM Clustering \n 55% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
surv.ob <- Surv(exp(time),censoring)
surv.fit <- survfit(surv.ob ~ c.final)
logrank <- survdiff(surv.ob ~ c.final)
p3 <- ggsurv(surv.fit, main = " Training Set DPMM \n Kaplan Meier Estimators \n p-value 6e-04 ") + ggplot2::guides(linetype = FALSE) + ggplot2::scale_colour_discrete(name = 'Classes',breaks = c(1,2,3,4),labels = c('1', '2','3',4))
library(GGally)
p3 <- ggsurv(surv.fit, main = " Training Set DPMM \n Kaplan Meier Estimators \n p-value 6e-04 ") + ggplot2::guides(linetype = FALSE) + ggplot2::scale_colour_discrete(name = 'Classes',breaks = c(1,2,3,4),labels = c('1', '2','3',4))
p3
c.list[[1]]
est.gmmx1$mu
est.gmmx1
names(est.gmmx1)
est.gmmx1$mu
c.list
names(est.regy1[[1]])
rank <- matrix(0, nrow = N, ncol =Nps)
j =1
Y1.scaled <- matrix(0, nrow = N, ncol =D1)
for ( v in 1:4){
clust <- which(c.list[[j]] == v)
Y1.scaled[clust,1:D1] <- scale(Y1[clust,1:D1], center = TRUE, scale = TRUE)
}
rank <- matrix(0, nrow = N, ncol =Nps)
for ( i in 1:N){
rank[i,j] <- dMVN(as.vector(t(Y1[i,1:D1])), est.gmmx1[[j]]$mu[c.final[i],1:D1], Q= est.gmmx1[[j]]$S[c.final[i],1:D1,1:D1], log = TRUE) - dMVN(as.vector(t(Y1[i,1:D1])), est.gmmx1[[j]]$mu[1,1:D1], Q= est.gmmx1[[j]]$S[1,1:D1,1:D1], log = TRUE)+  dnorm(x = That[i], mean = est.regy1[[j]]$beta0[c.final[i]] + est.regy1[[j]]$betahat[c.final[i],1:D1] %*% as.vector(t(Y1.scaled[i,1:D1])), sd = sqrt(est.regy1[[j]]$sigma2[c.final[i]]), log =TRUE) -  dnorm(x = That[i], mean = est.regy1[[j]]$betahat[1,1:D1] %*% as.vector(t(Y1.scaled[i,1:D1])), sd = sqrt(est.regy1[[j]]$sigma2[1]), log =TRUE)
}
rank <- matrix(0, nrow = N, ncol =Nps)
for (j in 1:Nps){
Y1.scaled <- matrix(0, nrow = N, ncol =D1)
for ( v in 1:4){
clust <- which(c.list[[j]] == v)
Y1.scaled[clust,1:D1] <- scale(Y1[clust,1:D1], center = TRUE, scale = TRUE)
}
for ( i in 1:N){
rank[i,j] <- dMVN(as.vector(t(Y1[i,1:D1])), mean = est.gmmx1[[j]]$mu[c.final[i],1:D1], Q= est.gmmx1[[j]]$S[c.final[i],1:D1,1:D1], log = TRUE) - dMVN(as.vector(t(Y1[i,1:D1])), mean = est.gmmx1[[j]]$mu[1,1:D1], Q= est.gmmx1[[j]]$S[1,1:D1,1:D1], log = TRUE)+  dnorm(x = That[i], mean = est.regy1[[j]]$beta0[c.final[i]] + est.regy1[[j]]$betahat[c.final[i],1:D1] %*% as.vector(t(Y1.scaled[i,1:D1])), sd = sqrt(est.regy1[[j]]$sigma2[c.final[i]]), log =TRUE) -  dnorm(x = That[i], mean = est.regy1[[j]]$betahat[1,1:D1] %*% as.vector(t(Y1.scaled[i,1:D1])), sd = sqrt(est.regy1[[j]]$sigma2[1]), log =TRUE)
}
}
avg.rank <- apply(rank,1,mean)
order.zo <- range01(avg.rank)
order.train <- sort(order.zo,index.return = TRUE, decreasing = TRUE)
Y1.order <- Y1[order.train$ix,]
c.final.order <- c.final[order.train$ix]
######## Reordering Again ################
order.2 <- c(which(c.final.order==1),which(c.final.order==3),which(c.final.order==4),which(c.final.order==2))
Y1.order.2 <- Y1.order[order.2,]
c.final.order.2 <- c.final.order[order.2]
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("green","red","blue","orange")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM Gene Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Best","Good Moderate","Bad moderate","Worst"),fill = c("Green","Blue","Orange","Red"), cex = 0.4)
mean(time[c.final ==1])
table(c.final)
mean(exp(time[c.final ==1]))
mean(exp(time[c.final ==2]))
mean(exp(time[c.final ==3]))
mean(exp(time[c.final ==4]))
c.final.order.2
c("green","red","blue","orange")[c.final.order.2]
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM Gene Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Red"), cex = 0.4)
rank <- matrix(0, nrow = N, ncol =Nps)
for (j in 1:Nps){
Y1.scaled <- matrix(0, nrow = N, ncol =D1)
for ( v in 1:4){
clust <- which(c.list[[j]] == v)
Y1.scaled[clust,1:D1] <- scale(Y1[clust,1:D1], center = TRUE, scale = TRUE)
}
for ( i in 1:N){
rank[i,j] <- dMVN(as.vector(t(Y1[i,1:D1])), mean = est.gmmx1[[j]]$mu[c.final[i],1:D1], Q= est.gmmx1[[j]]$S[c.final[i],1:D1,1:D1], log = TRUE) - dMVN(as.vector(t(Y1[i,1:D1])), mean = est.gmmx1[[j]]$mu[1,1:D1], Q= est.gmmx1[[j]]$S[1,1:D1,1:D1], log = TRUE)+  dnorm(x = That[i], mean = est.regy1[[j]]$beta0[c.final[i]] + est.regy1[[j]]$betahat[c.final[i],1:D1] %*% as.vector(t(Y1.scaled[i,1:D1])), sd = sqrt(est.regy1[[j]]$sigma2[c.final[i]]), log =TRUE) -  dnorm(x = That[i], mean = est.regy1[[j]]$betahat[1,1:D1] %*% as.vector(t(Y1.scaled[i,1:D1])), sd = sqrt(est.regy1[[j]]$sigma2[1]), log =TRUE)
}
}
avg.rank <- apply(rank,1,mean)
order.zo <- range01(avg.rank)
order.train <- sort(order.zo,index.return = TRUE, decreasing = TRUE)
Y1.order <- Y1[order.train$ix,]
c.final.order <- c.final[order.train$ix]
######## Reordering Again ################
order.2 <- c(which(c.final.order==1),which(c.final.order==3),,which(c.final.order==2),which(c.final.order==4))
Y1.order.2 <- Y1.order[order.2,]
c.final.order.2 <- c.final.order[order.2]
c.final.order.2
c("red","orange","blue","green")[c.final.order.2]
c("red","blue","orange","green")[c.final.order.2]
c("red","blue","green","orange")[c.final.order.2]
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM Gene Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
order.train <- sort(order.zo,index.return = TRUE, decreasing = TRUE)
Y1.order <- Y1[order.train$ix,]
c.final.order <- c.final[order.train$ix]
######## Reordering Again ################
order.2 <- c(which(c.final.order==1),which(c.final.order==3),,which(c.final.order==2),which(c.final.order==4))
Y1.order.2 <- Y1.order[order.2,]
c.final.order.2 <- c.final.order[order.2]
c.final.order.2
order.2 <- c(which(c.final.order==1),which(c.final.order==3),which(c.final.order==2),which(c.final.order==4))
Y1.order.2 <- Y1.order[order.2,]
c.final.order.2 <- c.final.order[order.2]
c.final.order.2
##### Plotting the Heatmap #################
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM Gene Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Red"), cex = 0.4)
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
rank2 <- matrix(0, nrow = N, ncol =Nps)
for (j in 1:Nps){
Y2.scaled <- matrix(0, nrow = N, ncol =D2)
for ( v in 1:4){
clust <- which(c.list[[j]] == v)
Y2.scaled[clust,1:D2] <- scale(Y2[clust,1:D2], center = TRUE, scale = TRUE)
}
for ( i in 1:N){
rank2[i,j] <- dMVN(as.vector(t(Y2[i,1:D2])), mean = est.gmmx2[[j]]$mu[c.final[i],1:D2], Q= est.gmmx2[[j]]$S[c.final[i],1:D2,1:D2], log = TRUE) - dMVN(as.vector(t(Y2[i,1:D2])), mean = est.gmmx2[[j]]$mu[1,1:D2], Q= est.gmmx2[[j]]$S[1,1:D2,1:D2], log = TRUE)+  dnorm(x = That[i], mean = est.regy2[[j]]$beta0[c.final[i]] + est.regy2[[j]]$betahat[c.final[i],1:D2] %*% as.vector(t(Y2.scaled[i,1:D2])), sd = sqrt(est.regy2[[j]]$sigma2[c.final[i]]), log =TRUE) -  dnorm(x = That[i], mean = est.regy2[[j]]$betahat[1,1:D2] %*% as.vector(t(Y2.scaled[i,1:D2])), sd = sqrt(est.regy2[[j]]$sigma2[1]), log =TRUE)
}
}
avg.rank2 <- apply(rank2,1,mean)
order.zo2 <- range01(avg.rank2)
order.train2 <- sort(order.zo2,index.return = TRUE, decreasing = TRUE)
Y2.order <- Y2[order.train2$ix,]
c.final.order2 <- c.final[order.train2$ix]
######## Reordering Again ################
order.2 <- c(which(c.final.order==1),which(c.final.order==3),which(c.final.order==2),which(c.final.order==4))
Y2.order.2 <- Y2.order[order.2,]
c.final.order.2 <- c.final.order2[order.2]
##### Plotting the Heatmap #################
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM mi-RNA Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
order.2 <- c(which(c.final.order2==1),which(c.final.order2==3),which(c.final.order2==2),which(c.final.order2==4))
Y2.order.2 <- Y2.order[order.2,]
c.final.order.2 <- c.final.order2[order.2]
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM mi-RNA Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y2.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM mi-RNA Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y2.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y2.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM mi-RNA Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
save(list =ls(), file = 'TCGA-GBM.RData')
#### Plotting mi-RNA expression ##############
rank2 <- matrix(0, nrow = N, ncol =Nps)
for (j in 1:Nps){
Y2.scaled <- matrix(0, nrow = N, ncol =D2)
for ( v in 1:4){
clust <- which(c.list[[j]] == v)
Y2.scaled[clust,1:D2] <- scale(Y2[clust,1:D2], center = TRUE, scale = TRUE)
}
for ( i in 1:N){
rank2[i,j] <- dMVN(as.vector(t(Y2[i,1:D2])), mean = est.gmmx2[[j]]$mu[c.final[i],1:D2], Q= est.gmmx2[[j]]$S[c.final[i],1:D2,1:D2], log = TRUE) - dMVN(as.vector(t(Y2[i,1:D2])), mean = est.gmmx2[[j]]$mu[1,1:D2], Q= est.gmmx2[[j]]$S[1,1:D2,1:D2], log = TRUE)+  dnorm(x = That[i], mean = est.regy2[[j]]$beta0[c.final[i]] + est.regy2[[j]]$betahat[c.final[i],1:D2] %*% as.vector(t(Y2.scaled[i,1:D2])), sd = sqrt(est.regy2[[j]]$sigma2[c.final[i]]), log =TRUE) -  dnorm(x = That[i], mean = est.regy2[[j]]$betahat[1,1:D2] %*% as.vector(t(Y2.scaled[i,1:D2])), sd = sqrt(est.regy2[[j]]$sigma2[1]), log =TRUE)
}
}
avg.rank2 <- apply(rank2,1,mean)
order.zo2 <- range01(avg.rank2)
order.train2 <- sort(order.zo2,index.return = TRUE, decreasing = TRUE)
Y2.order <- Y2[order.train2$ix,]
c.final.order2 <- c.final[order.train2$ix]
######## Reordering Again ################
order.2 <- c(which(c.final.order2==1),which(c.final.order2==3),which(c.final.order2==2),which(c.final.order2==4))
Y2.order.2 <- Y2.order[order.2,]
c.final.order.22 <- c.final.order2[order.2]
##### Plotting the Heatmap #################
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y2.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.22], labRow = colnames(Y2.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM mi-RNA Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
##############################################################################################################################################
########################### VISUALIZATION ####################################################################################################
##############################################################################################################################################
##### Generating some plots #####################################
### Training Data Set ###########################################
pc <- prcomp(Y1)
pc.pred <- predict(pc,newdata = Y1)
p1 <- ggplot(as.data.frame(pc.pred), aes(x=pc.pred[,1], y= pc.pred[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
pc <- prcomp(Y2)
pc.pred <- predict(pc,newdata = Y2)
p2 <- ggplot(as.data.frame(pc.pred), aes(x=pc.pred[,1], y= pc.pred[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM miRNA Expression \n DPMM Clustering \n 55% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
surv.ob <- Surv(exp(time),censoring)
surv.fit <- survfit(surv.ob ~ c.final)
logrank <- survdiff(surv.ob ~ c.final)
p3 <- ggsurv(surv.fit, main = " Training Set DPMM \n Kaplan Meier Estimators \n p-value 6e-04 ") + ggplot2::guides(linetype = FALSE) + ggplot2::scale_colour_discrete(name = 'Classes',breaks = c(1,2,3,4),labels = c('1', '2','3',4))
##########################################################
########## Creating a Ranking for the Points ####################
###### Creating a Ratio for the Points ########################
rank <- matrix(0, nrow = N, ncol =Nps)
for (j in 1:Nps){
Y1.scaled <- matrix(0, nrow = N, ncol =D1)
for ( v in 1:4){
clust <- which(c.list[[j]] == v)
Y1.scaled[clust,1:D1] <- scale(Y1[clust,1:D1], center = TRUE, scale = TRUE)
}
for ( i in 1:N){
rank[i,j] <- dMVN(as.vector(t(Y1[i,1:D1])), mean = est.gmmx1[[j]]$mu[c.final[i],1:D1], Q= est.gmmx1[[j]]$S[c.final[i],1:D1,1:D1], log = TRUE) - dMVN(as.vector(t(Y1[i,1:D1])), mean = est.gmmx1[[j]]$mu[1,1:D1], Q= est.gmmx1[[j]]$S[1,1:D1,1:D1], log = TRUE)+  dnorm(x = That[i], mean = est.regy1[[j]]$beta0[c.final[i]] + est.regy1[[j]]$betahat[c.final[i],1:D1] %*% as.vector(t(Y1.scaled[i,1:D1])), sd = sqrt(est.regy1[[j]]$sigma2[c.final[i]]), log =TRUE) -  dnorm(x = That[i], mean = est.regy1[[j]]$betahat[1,1:D1] %*% as.vector(t(Y1.scaled[i,1:D1])), sd = sqrt(est.regy1[[j]]$sigma2[1]), log =TRUE)
}
}
avg.rank <- apply(rank,1,mean)
order.zo <- range01(avg.rank)
order.train <- sort(order.zo,index.return = TRUE, decreasing = TRUE)
Y1.order <- Y1[order.train$ix,]
c.final.order <- c.final[order.train$ix]
######## Reordering Again ################
order.2 <- c(which(c.final.order==1),which(c.final.order==3),which(c.final.order==2),which(c.final.order==4))
Y1.order.2 <- Y1.order[order.2,]
c.final.order.2 <- c.final.order[order.2]
##### Plotting the Heatmap #################
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM Gene Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
pdf('TCGA-GBM.pdf')
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM Gene Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
p1
heatmap.2(x = t(Y2.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y2.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM mi-RNA Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
p2
p3
dev.off()
pc <- prcomp(Y2)
pc.pred <- predict(pc,newdata = Y2)
p2 <- ggplot(as.data.frame(pc.pred), aes(x=pc.pred[,1], y= pc.pred[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM miRNA Expression \n DPMM Clustering \n 55% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
pc <- prcomp(Y1)
pc.pred <- predict(pc,newdata = Y1)
p1 <- ggplot(as.data.frame(pc.pred), aes(x=pc.pred[,1], y= pc.pred[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
pc <- prcomp(Y2)
pc.pred <- predict(pc,newdata = Y2)
p2 <- ggplot(as.data.frame(pc.pred), aes(x=pc.pred[,1], y= pc.pred[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM miRNA Expression \n DPMM Clustering \n 55% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
pdf('TCGA-GBM-Training.pdf')
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM Gene Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
p1
heatmap.2(x = t(Y2.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y2.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM mi-RNA Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
p2
p3
dev.off()
pc1 <- prcomp(Y1)
pc.pred1 <- predict(pc1,newdata = Y1)
p1 <- ggplot(as.data.frame(pc.pred1), aes(x=pc.pred1[,1], y= pc.pred1[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
pc2 <- prcomp(Y2)
pc.pred2 <- predict(pc2,newdata = Y2)
p2 <- ggplot(as.data.frame(pc.pred2), aes(x=pc.pred2[,1], y= pc.pred2[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM miRNA Expression \n DPMM Clustering \n 55% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
p1
p2
pc1 <- prcomp(Y1)
pc.pred1 <- predict(pc1,newdata = Y1)
p1 <- ggplot(as.data.frame(pc.pred1), aes(x=pc.pred1[,1], y= pc.pred1[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
pc2 <- prcomp(Y2)
pc.pred2 <- predict(pc2,newdata = Y2)
p2 <- ggplot(as.data.frame(pc.pred2), aes(x=pc.pred2[,1], y= pc.pred2[,2], colour= as.factor(c.final))) + ggtitle(" TCGA GBM miRNA Expression \n DPMM Clustering \n 55% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
surv.ob <- Surv(exp(time),censoring)
surv.fit <- survfit(surv.ob ~ c.final)
logrank <- survdiff(surv.ob ~ c.final)
p3 <- ggsurv(surv.fit, main = " TCGA -GBM DPMM \n Kaplan Meier Estimators \n p-value 6e-04 ") + ggplot2::guides(linetype = FALSE) + ggplot2::scale_colour_discrete(name = 'Classes',breaks = c(1,2,3,4),labels = c('1', '2','3',4))
pdf('TCGA-GBM-Training.pdf')
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM Gene Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
p1
heatmap.2(x = t(Y2.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y2.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM mi-RNA Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
p2
p3
dev.off()
heatmapdata2
heatmapdata1
colnames(heatmapdata1) <- colnames(Y1)
colnames(heatmapdata2) <- colnames(Y2)
heatmapdata1
heatmapdata2
heatmap.2(t(as.matrix(heatmapdata1)),dendrogram="none", col =cm.colors(180), margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-Gene Expression Signature ", cexCol = 0.85, cexRow = 0.7, Rowv = FALSE)
heatmap.2(t(as.matrix(heatmapdata2)),dendrogram="none", col =cm.colors(180), margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-miRNA Expression Signature ", cexCol = 0.85, cexRow = 0.7, Rowv = FALSE)
hmcols<-colorRampPalette(c("white","black"))(128)
heatmap.2(t(as.matrix(heatmapdata1)),dendrogram="none", col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-Gene Expression Signature ", cexCol = 0.85, cexRow = 0.7, Rowv = FALSE)
heatmap.2(t(as.matrix(heatmapdata2)),dendrogram="none", col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-miRNA Expression Signature ", cexCol = 0.85, cexRow = 0.7, Rowv = FALSE)
par(mfrow=c(1,2))
heatmap.2(t(as.matrix(heatmapdata1)),dendrogram="none", col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-Gene Expression Signature ", cexCol = 0.85, cexRow = 0.7, Rowv = FALSE)
heatmap.2(t(as.matrix(heatmapdata2)),dendrogram="none", col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-miRNA Expression Signature ", cexCol = 0.85, cexRow = 0.7, Rowv = FALSE)
par(mfrow=c(2,1))
heatmap.2(t(as.matrix(heatmapdata1)),dendrogram="none", col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-Gene Expression Signature ", cexCol = 0.85, cexRow = 0.7, Rowv = FALSE)
heatmap.2(t(as.matrix(heatmapdata2)),dendrogram="none", col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-miRNA Expression Signature ", cexCol = 0.85, cexRow = 0.7, Rowv = FALSE)
pdf('Signature-TCGA.pdf')
par(mfrow=c(1,2))
heatmap.2(t(as.matrix(heatmapdata1)),dendrogram="none", col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-Gene Expression Signature ", cexCol = 0.85, cexRow = 0.7, Rowv = FALSE)
heatmap.2(t(as.matrix(heatmapdata2)),dendrogram="none", col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-miRNA Expression Signature ", cexCol = 0.85, cexRow = 0.7, Rowv = FALSE)
dev.off()
pdf('Signature-TCGA.pdf')
par(mfrow=c(1,2))
heatmap.2(t(as.matrix(heatmapdata1)), Rowv =TRUE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-Gene Expression Signature ", cexCol = 0.85, cexRow = 0.7, Rowv = FALSE)
heatmap.2(t(as.matrix(heatmapdata2)),Rowv =TRUE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-miRNA Expression Signature ", cexCol = 0.85, cexRow = 0.7, Rowv = FALSE)
dev.off()
pdf('Signature-TCGA.pdf')
par(mfrow=c(1,2))
heatmap.2(t(as.matrix(heatmapdata1)), Rowv =FALSE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-Gene Expression Signature ", cexCol = 0.85, cexRow = 0.7)
heatmap.2(t(as.matrix(heatmapdata2)),Rowv = FALSE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-miRNA Expression Signature ", cexCol = 0.85, cexRow = 0.7)
dev.off()
pdf('Signature-TCGA.pdf')
par(mfrow=c(1,2))
heatmap.2(t(as.matrix(heatmapdata1)), Rowv =FALSE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-Gene  Signature ", cexCol = 0.85, cexRow = 0.7)
heatmap.2(t(as.matrix(heatmapdata2)),Rowv = FALSE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n for TCGA-miRNA Signature ", cexCol = 0.85, cexRow = 0.7)
dev.off()
pdf('Signature-TCGA.pdf')
par(mfrow=c(1,2))
heatmap.2(t(as.matrix(heatmapdata1)), Rowv =FALSE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n  TCGA-Gene  Signature ", cexCol = 0.85, cexRow = 0.7)
heatmap.2(t(as.matrix(heatmapdata2)),Rowv = FALSE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n TCGA-miRNA Signature ", cexCol = 0.85, cexRow = 0.7)
dev.off()
t(as.matrix(heatmapdata1))[2:3,]
t(as.matrix(heatmapdata1))[,c(2,3)]
pdf('Signature-TCGA.pdf')
par(mfrow=c(1,2))
heatmap.2(t(as.matrix(heatmapdata1))[,c(2,3)], Rowv =FALSE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n  TCGA-Gene  Signature ", cexCol = 0.85, cexRow = 0.7)
heatmap.2(t(as.matrix(heatmapdata2))[,c(2,3)],Rowv = FALSE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n TCGA-miRNA Signature ", cexCol = 0.85, cexRow = 0.7)
dev.off()
heatmap.2(t(as.matrix(heatmapdata1))[,c(2:3)], Rowv =FALSE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n  TCGA-Gene  Signature ", cexCol = 0.85, cexRow = 0.7)
heatmapdata1
rownames(heatmapdata1) <- c("Worst","GoodModerate","BadModerate","Best")
rownames(heatmapdata2) <- c("Worst","GoodModerate","BadModerate","Best")
colnames(heatmapdata1) <- colnames(Y1)
colnames(heatmapdata2) <- colnames(Y2)
rownames(heatmapdata1) <- c("Worst","GoodModerate","BadModerate","Best")
rownames(heatmapdata2) <- c("Worst","GoodModerate","BadModerate","Best")
hmcols<-colorRampPalette(c("white","black"))(128)
pdf('Signature-TCGA.pdf')
par(mfrow=c(1,2))
heatmap.2(t(as.matrix(heatmapdata1))[,c(2:3)], Rowv =FALSE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n  TCGA-Gene  Signature ", cexCol = 0.85, cexRow = 0.7)
heatmap.2(t(as.matrix(heatmapdata2))[,c(2:3)],Rowv = FALSE ,Colv = FALSE, col = hmcols, margins=c(6,10), main = "Posterior prob. for Selection \n TCGA-miRNA Signature ", cexCol = 0.85, cexRow = 0.7)
dev.off()
c.final.pc <- c.final
levels(c.final.pc) <- c("Worst","GoodMod.","BadMod.","Best")
c.final.pc
pc1 <- prcomp(Y1)
pc.pred1 <- predict(pc1,newdata = Y1)
p1 <- ggplot(as.data.frame(pc.pred1), aes(x=pc.pred1[,1], y= pc.pred1[,2], colour= as.factor(c.final.pc))) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
p1
p1 <- ggplot(as.data.frame(pc.pred1), aes(x=pc.pred1[,1], y= pc.pred1[,2], colour= c.final.pc)) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
p1
c("Red","Blue","Orange","Green")[c.final.pc]
p1 <- ggplot(as.data.frame(pc.pred1), aes(x=pc.pred1[,1], y= pc.pred1[,2], colour= c("Red","Blue","Orange","Green")[c.final.pc])) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
p1
p1 <- ggplot(as.data.frame(pc.pred1), aes(x=pc.pred1[,1], y= pc.pred1[,2], colour= c("Worst","GoodMod.","BadMod.","Best")[c.final])) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
p1
pc1 <- prcomp(Y1)
pc.pred1 <- predict(pc1,newdata = Y1)
p1 <- ggplot(as.data.frame(pc.pred1), aes(x=pc.pred1[,1], y= pc.pred1[,2], colour= c("Worst","GoodMod.","BadMod.","Best")[c.final])) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
pc2 <- prcomp(Y2)
pc.pred2 <- predict(pc2,newdata = Y2)
p2 <- ggplot(as.data.frame(pc.pred2), aes(x=pc.pred2[,1], y= pc.pred2[,2], colour= c("Worst","GoodMod.","BadMod.","Best")[c.final])) + ggtitle(" TCGA GBM miRNA Expression \n DPMM Clustering \n 55% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes")
pdf('TCGA-GBM-Training.pdf')
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM Gene Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
p1
heatmap.2(x = t(Y2.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y2.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM mi-RNA Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
p2
p3
dev.off()
p3 <- ggsurv(surv.fit, main = " TCGA -GBM DPMM \n Kaplan Meier Estimators \n p-value 6e-04 ") + ggplot2::guides(linetype = FALSE) + ggplot2::scale_colour_discrete(name = 'Classes',breaks = c(1,2,3,4),labels = c("Worst","GoodMod.","BadMod.","Best"))
p3
pdf('TCGA-GBM-Training.pdf')
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM Gene Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
p1
heatmap.2(x = t(Y2.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y2.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM mi-RNA Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
p2
p3
dev.off()
cb <- c("Red","Blue","Orange","Green")
p1 <- ggplot(as.data.frame(pc.pred1), aes(x=pc.pred1[,1], y= pc.pred1[,2], colour= c("Worst","GoodMod.","BadMod.","Best")[c.final])) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes") + scale_colour_manual(values=cb)
p1
cb <- c("Orange","Green","Blue","Red")
p1 <- ggplot(as.data.frame(pc.pred1), aes(x=pc.pred1[,1], y= pc.pred1[,2], colour= c("Worst","GoodMod.","BadMod.","Best")[c.final])) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes") + scale_colour_manual(values=cb)
p1
pc1 <- prcomp(Y1)
pc.pred1 <- predict(pc1,newdata = Y1)
cb <- c("Orange","Green","Blue","Red")
p1 <- ggplot(as.data.frame(pc.pred1), aes(x=pc.pred1[,1], y= pc.pred1[,2], colour= c("Worst","GoodMod.","BadMod.","Best")[c.final])) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes") + scale_colour_manual(values=cb)
pc2 <- prcomp(Y2)
pc.pred2 <- predict(pc2,newdata = Y2)
p2 <- ggplot(as.data.frame(pc.pred2), aes(x=pc.pred2[,1], y= pc.pred2[,2], colour= c("Worst","GoodMod.","BadMod.","Best")[c.final])) + ggtitle(" TCGA GBM miRNA Expression \n DPMM Clustering \n 55% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes") + scale_colour_manual(values=cb)
surv.ob <- Surv(exp(time),censoring)
surv.fit <- survfit(surv.ob ~ c.final)
logrank <- survdiff(surv.ob ~ c.final)
p3 <- ggsurv(surv.fit, main = " TCGA -GBM DPMM \n Kaplan Meier Estimators \n p-value 6e-04 ") + ggplot2::guides(linetype = FALSE) + ggplot2::scale_colour_discrete(name = 'Classes',breaks = c(1,2,3,4),labels = c("Worst","GoodMod.","BadMod.","Best")) + scale_colour_manual(values=cb)
p3
pc1 <- prcomp(Y1)
pc.pred1 <- predict(pc1,newdata = Y1)
cb <- c("Orange","Green","Blue","Red")
p1 <- ggplot(as.data.frame(pc.pred1), aes(x=pc.pred1[,1], y= pc.pred1[,2], colour= c("Worst","GoodMod.","BadMod.","Best")[c.final])) + ggtitle(" TCGA GBM Gene Expression \n DPMM Clustering \n 45% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes") + scale_colour_manual(values=cb)
pc2 <- prcomp(Y2)
pc.pred2 <- predict(pc2,newdata = Y2)
p2 <- ggplot(as.data.frame(pc.pred2), aes(x=pc.pred2[,1], y= pc.pred2[,2], colour= c("Worst","GoodMod.","BadMod.","Best")[c.final])) + ggtitle(" TCGA GBM miRNA Expression \n DPMM Clustering \n 55% Variance Explained") + geom_point(shape=19) + labs(y = "PC1", x = "PC2", colour = "Classes") + scale_colour_manual(values=cb)
surv.ob <- Surv(exp(time),censoring)
surv.fit <- survfit(surv.ob ~ c.final)
logrank <- survdiff(surv.ob ~ c.final)
p3 <- ggsurv(surv.fit, main = " TCGA -GBM DPMM \n Kaplan Meier Estimators \n p-value 6e-04 ") + ggplot2::guides(linetype = FALSE) + ggplot2::scale_colour_discrete(name = 'Classes',breaks = c(1,2,3,4),labels = c("Worst","GoodMod.","BadMod.","Best"))
p1
p2
pdf('TCGA-GBM-Training.pdf')
hmcols<-colorRampPalette(c("green","black","red"))(256)
heatmap.2(x = t(Y1.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y1.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM Gene Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
p1
heatmap.2(x = t(Y2.order.2), Rowv =TRUE ,Colv = FALSE, dendrogram = c("row"), scale ="row",ColSideColors =c("red","blue","orange","green")[c.final.order.2], labRow = colnames(Y2.order.2), labCol = NA, main = ' \n Training Set \n TCGA GBM mi-RNA Expression Data', col =hmcols, cexRow =0.40, trace ="none", key.title = "Color Key")
legend("topright", legend = c("Worst","Good Moderate","Bad moderate","Best"),fill = c("Red","Blue","Orange","Green"), cex = 0.4)
p2
p3
dev.off()
c.final.new
table(c.final.new)
mean(exp(time.new[c.final.new == 2]))
mean(exp(time.new[c.final.new == 1]))
mean(exp(time.new[c.final.new == 3]))
mean(exp(time.new[c.final.new == 4]))
surv.ob <- Surv(exp(time.new),censoring.new)
test.randindex <- adjustedRandIndex(apply(posteriorprob,1,which.max),c.true.new)
survdiff(surv.ob ~ c.final.new)
Y.test.combined <- cbind(Y1.test,Y2.test)
dim(Y.test.combined)
predicted.cindex
k
km <- kmeans(Y.test.combined, centers =k, nstart =10)
km
km$cluster
surv.ob <- Surv(exp(time.new),censoring.new)
survdiff(surv.ob ~ km$cluster)
Y.combined <-  cbind(Y1,Y2)
Y.test.combined <- cbind(Y1.test,Y2.test)
km <- kmeans(Y.combined, centers =k, nstart =10)
km$cluster
knn(train = Y.combined, test = Y.combined.test, cl = km$cluster, k = 4)
Y.combined <-  cbind(Y1,Y2)
Y.test.combined <- cbind(Y1.test,Y2.test)
km.labels <- kmeans(Y.combined, centers =k, nstart =10)
knn.labels <- knn(train = Y.combined, test = Y.combined.test, cl = km$cluster, k = 4)
library(class)
knn.labels <- knn(train = Y.combined, test = Y.combined.test, cl = km$cluster, k = 4)
Y.combined <-  cbind(Y1,Y2)
Y.test.combined <- cbind(Y1.test,Y2.test)
km.labels <- kmeans(Y.combined, centers =k, nstart =10)
knn.labels
knn.labels <- knn(train = Y.combined, test = Y.test.combined, cl = km$cluster, k = 4)
surv.ob <- Surv(exp(time.new),censoring.new)
survdiff(surv.ob ~ knn.labels)
surv <- Surv(exp(time),censoring)
survdiff(surv ~ km.labels)
Y.combined <-  cbind(Y1,Y2)
Y.test.combined <- cbind(Y1.test,Y2.test)
km.labels <- kmeans(Y.combined, centers =k, nstart =10)$cluster
knn.labels <- knn(train = Y.combined, test = Y.test.combined, cl = km.labels, k = 4)
surv <- Surv(exp(time),censoring)
survdiff(surv ~ km.labels$cluster)
survdiff(surv ~ km.labels)
surv.ob <- Surv(exp(time.new),censoring.new)
survdiff(surv.ob ~ knn.labels)
label.train <- km.labels
label.test <- knn.labels
linear.kkpcox.prediction <- c(0)
F
linear.kkpcox.recovery <- c(0)`
linear.kkpcox.prediction <- c(0)
for ( q in 1:F){
ind <- which(label.train == q)
ind.new <- which(label.test == q)
reg.cox <- cv.glmnet(x = Y.combined[ind,], y = Surv(exp(time[ind]),censoring[ind]), family = "cox", maxit = 10000000)
linear.kkpcox.recovery[ind] <- predict(object =reg.cox, newx = Y.combined[ind,])
linear.kkpcox.prediction[ind.new] <- predict(object =reg.cox, newx = Y.test.combined[ind.new,])
}
}
'
'
''
)
}}}
}}}}}}}}}
{}
}}}
